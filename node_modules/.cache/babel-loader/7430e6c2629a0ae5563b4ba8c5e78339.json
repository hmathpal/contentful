{"ast":null,"code":"var _jsxFileName = \"/Users/hmathpal/Desktop/github/headless/src/components/services/services.js\";\nimport React from \"react\";\nimport { Alert, Container, Row, Col, Card, CardTitle, CardHeader, CardBody, CardImg, Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\nimport { Form, FormInput, FormGroup } from \"shards-react\";\nimport { FaSkype, FaSlackHash, FaWhatsapp, FaSms, FaMailBulk, FaSlack, FaPhone, FaArrowRight } from 'react-icons/fa';\nimport { ListGroup, ListGroupItem, ListGroupItemHeading } from \"shards-react\";\nimport { useState, useEffect } from \"react\";\nimport { appConfig } from \"../config\";\nimport axios from 'axios';\nimport { ApolloClient, createHttpLink, InMemoryCache, gql } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: appConfig.graphQLHost + \"\" + appConfig.space_id + \"/\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = appConfig.access_token;\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nclass Services extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      services: []\n    };\n  }\n\n  // Authenticate the request\n  componentDidMount() {\n    const API = appConfig.graphQLHost + \"/\" + appConfig.space_id + \"/\";\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + appConfig.access_token\n    };\n    client.query({\n      query: gql`\n       servicesCollection {\n          items\n          {\n            name\n            \n            detail\n            \n            appicon {fileName url}\n\n              \n          }\n        }\n      `\n    }).then(result => console.log(result));\n    /* axios.post(API, \n       {\n         query : `{\n           servicesCollection(limit: 10) {\n             items\n             {\n               name\n               \n               detail\n               \n               appicon {fileName url}\n                  \n             }\n           }\n         }`\n      }\n     , {  headers : headers  })\n       .then(res => {\n         \n         this.setState({ services: res.data.data.servicesCollection.items })\n         console.log(\"RES --> \",res.data.data.servicesCollection.items )\n        \n       }).catch((error) => {\n         console.error(error)\n       })\n    */\n  }\n\n  render() {\n    let columns = [];\n    this.state.services.forEach((item, idx) => {\n      columns.push( /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            maxWidth: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: \"Services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardImg, {\n              src: item.appicon.url,\n              style: {\n                width: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-truncate\",\n              children: item.detail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Read more \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)); // force wrap to next row every 4 columns\n\n      if ((idx + 1) % 2 === 0) {\n        columns.push( /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            paddingTop: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 43\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          paddingTop: \"30px\"\n        },\n        children: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Services;","map":{"version":3,"sources":["/Users/hmathpal/Desktop/github/headless/src/components/services/services.js"],"names":["React","Alert","Container","Row","Col","Card","CardTitle","CardHeader","CardBody","CardImg","Button","Modal","ModalBody","ModalHeader","Form","FormInput","FormGroup","FaSkype","FaSlackHash","FaWhatsapp","FaSms","FaMailBulk","FaSlack","FaPhone","FaArrowRight","ListGroup","ListGroupItem","ListGroupItemHeading","useState","useEffect","appConfig","axios","ApolloClient","createHttpLink","InMemoryCache","gql","setContext","httpLink","uri","graphQLHost","space_id","authLink","_","headers","token","access_token","authorization","client","link","concat","cache","Services","Component","state","services","componentDidMount","API","query","then","result","console","log","render","columns","forEach","item","idx","push","paddingTop","maxWidth","name","appicon","url","width","detail"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Alert, Container, Row, Col, Card, CardTitle, CardHeader, CardBody, CardImg , Button, Modal, ModalBody, ModalHeader} from \"shards-react\";\nimport { Form, FormInput, FormGroup } from \"shards-react\";\nimport { FaSkype, FaSlackHash, FaWhatsapp, FaSms, FaMailBulk, FaSlack, FaPhone, FaArrowRight } from 'react-icons/fa';\nimport { ListGroup, ListGroupItem, ListGroupItemHeading } from \"shards-react\";\n\nimport { useState, useEffect } from \"react\";\nimport { appConfig } from \"../config\"\nimport axios from 'axios';\nimport { ApolloClient, createHttpLink, InMemoryCache , gql} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\nconst httpLink = createHttpLink({\n  uri:  appConfig.graphQLHost+\"\"+appConfig.space_id+\"/\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n \n  const token = appConfig.access_token;\n  \n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nclass Services extends React.Component\n{\n  \n\n  state = {\n    services: []\n  }\n \n  // Authenticate the request\n \n  componentDidMount() \n  {\n    const API = appConfig.graphQLHost+\"/\"+appConfig.space_id+\"/\"\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer '+appConfig.access_token\n    }\n   \n\n    client\n    .query({\n      query: gql`\n       servicesCollection {\n          items\n          {\n            name\n            \n            detail\n            \n            appicon {fileName url}\n\n              \n          }\n        }\n      `\n    })\n    .then(result => console.log(result));\n   \n   /* axios.post(API, \n      {\n        query : `{\n          servicesCollection(limit: 10) {\n            items\n            {\n              name\n              \n              detail\n              \n              appicon {fileName url}\n\n                \n            }\n          }\n        }`\n\n    }\n    , {  headers : headers  })\n      .then(res => {\n        \n        this.setState({ services: res.data.data.servicesCollection.items })\n        console.log(\"RES --> \",res.data.data.servicesCollection.items )\n       \n      }).catch((error) => {\n        console.error(error)\n      })\n  */\n  \n    }\n\n\n\n  render() {\n   \n    \n    let columns=[];\n    this.state.services.forEach((item,idx) => {\n\n      \n        \n        columns.push(\n          <Col style={{ paddingTop: \"10px\" }}>\n          <Card style={{ maxWidth: \"300px\" }}>\n          <CardHeader>Services</CardHeader>\n          \n          <CardBody>\n            <CardTitle>{item.name}</CardTitle>\n            <CardImg src={item.appicon.url} style={{ width: \"100px\" }}/>\n            <p className=\"text-truncate\">{item.detail}</p>\n            <Button>Read more &rarr;</Button>\n          </CardBody>\n        \n        </Card>\n        </Col>\n        )\n       \n        // force wrap to next row every 4 columns\n        if ((idx+1)%2===0) {columns.push( <Row style={{ paddingTop: \"20px\" }}></Row>)}\n    })\n\n\n    return (\n        <Container>\n           <Row style={{ paddingTop: \"30px\" }}>\n          {columns}\n        </Row>\n        </Container>\n    )       \n    \n    \n    \n    \n    \n  }\n}\n\nexport default Services;"]},"metadata":{},"sourceType":"module"}